<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>当你离开，我会想起啥</title>
    <url>/2020/02/23/about-the-leave/</url>
    <content><![CDATA[<p><img src="https://i.loli.net/2020/02/23/BpIskxCKVEAhLU5.png" alt="WX20200223-174543.png"><br>春节，象征着辞旧迎新，在中国传统节日中是最为重要的一个，也是阖家欢乐的一段美好时光。抛开今年的疫情不谈，春节对于职场的人而言，除了可能领取到一份可观的年终奖金，用来犒劳自己一年的辛苦耕耘外，也往往是一个跳槽的高峰期。</p>
<p>作为一个小团队的 Leader，当你收到如下结构的微信消息时：</p>
<blockquote>
<p>哥，有空么？想找你聊个事情。</p>
</blockquote>
<p>可以预见八成是个坏消息，而且大概率是要找你提出离职意向了。那咱们今天就来聊一聊，当你的下属提出离职申请时，如何优雅的处理。本文仅是自己对处理下属员工离职过程中的一些看法，和大家分享一下，会围绕以下三个问题展开。</p>
<a id="more"></a>

<hr>
<h3 id="问题-1-如何看待下属员工提出离职？"><a href="#问题-1-如何看待下属员工提出离职？" class="headerlink" title="问题 1. 如何看待下属员工提出离职？"></a>问题 1. 如何看待下属员工提出离职？</h3><p>其实在下属员工离职前，<strong>想必对其以往在团队中的能力表现有一个初步的主观评判了</strong>。当下属员工在团队中的不可替代性不强时，甚至和这位绩效不高的下属谈过多次却没得到改善时，可能接下来的就是好聚好散的节奏了，在此不表。</p>
<p>但是，如果这是一位往常表现一直不错，在团队中承担着重要分工的员工，那一般第一个反应是，<strong>我需要去了解真实的想法或诉求，并尝试满足以便能够挽留住他。</strong></p>
<p>“钱多活少离家近”，这是大家戏称的理想工作，话糙理不糙。所以可以尝试这几个方向诉求沟通：</p>
<p><strong>方向 1: 工作的城市离家太远</strong></p>
<p><strong>方向 2: 工作内容不喜欢，或者压力太大了</strong></p>
<p><strong>方向 3: 薪水或职位不满意</strong></p>
<p>方向 1、2，多从是不是“心委屈了”的角度去聊，让员工说出真实的想法。如果是，作为 Leader 可以在自己能力范围内去为其争取调岗或者换一个新的团队环境，权限不足甚至可以向老板特殊申请。为优秀的员工创造岗位，并不仅仅在面试时存在。</p>
<p>方向3，多从是不是“钱给少了”的角度去聊，但一般这个不是理由，因为优秀的员工，他的薪资水平至少在公司内部的同届员工中是处于领先地位的。当然不排除你所在的公司在同行中处于劣势，那确实很难去改变太多，但是也是因人而异的。</p>
<hr>
<h3 id="问题-2-除了被通知，我们还能做点什么？"><a href="#问题-2-除了被通知，我们还能做点什么？" class="headerlink" title="问题 2. 除了被通知，我们还能做点什么？"></a>问题 2. 除了被通知，我们还能做点什么？</h3><p>当然是多反思并改善了。</p>
<p>这是网络上一些对离职员工入职时间来分析离职原因的，虽不能以偏概全，但可以提供一些参考：</p>
<blockquote>
<ol>
<li>入职2周离职，负责招聘的人员需要反省；</li>
<li>入职3个月离职，主要与工作本身有关；</li>
<li>入职6个月离职-直属领导要反省；</li>
<li>2年左右离职-企业文化要反省；</li>
<li>3-5年离职-职业技能体系与薪酬体系的反省；</li>
<li>5年以上离职-创新需要反省。</li>
</ol>
</blockquote>
<p>而作为直属 Leader ，可以尝试在平日的工作生活中多做一些：</p>
<ol>
<li>反思自己的领导能力，补充相应的知识技能；</li>
<li>平时多与下属员工聊聊，以便了解大家的诉求，提早能有个心理预期及改善；</li>
<li>在重要岗位上，尽可能的做好备份；</li>
<li>为团队争取尽可能多的福利。</li>
</ol>
<hr>
<h3 id="问题-3-当离职已成定局，如何做好接下来的工作？"><a href="#问题-3-当离职已成定局，如何做好接下来的工作？" class="headerlink" title="问题 3. 当离职已成定局，如何做好接下来的工作？"></a>问题 3. 当离职已成定局，如何做好接下来的工作？</h3><p><strong>一是换位思考。</strong></p>
<p>想必在了解员工诉求时，能了解到员工的想法以及是否已经找好了下家了。若是裸辞的员工，可以尽可能的提供帮助。说得难听些“买卖不成仁义在”，对一个与你并肩作战多年的战友，你在行业内的资源相比较而言，应该能够提供一些帮助给他的。</p>
<p>说得腹黑一些，也许以后还是能扩展自己资源呢。因为在下属离职前，你们认识的人、认知中的事，大概率是重叠的，但是在他离职后去了一个新环境，那他的资源可能就有更大的价值了。</p>
<p><strong>二是工作交接。</strong></p>
<p>紧接着而来的就是工作交接了，先要和离职员工确定好具体的离职时间，尽可能的保障有充足的时间来做好交接工作，毕竟你需要时间来协调到另一位适合的人来接收工作。不排除离职员工在最后这一班岗没有负责任站好的情况，需要作为 Leader 更为主动的去监控此事，或自己亲自参与协调，或监督好接手的同事。尽可能降低一个员工离职带来的负面影响。</p>
<p><strong>三是安抚其他同事。</strong></p>
<p>员工的离职，想必会对其他团队成员带来负面情绪。这时候可以开诚布公的和大家说明其离职原因，不要让一些所谓的小道消息在大家间流传，即使的制止一些负面的影响。</p>
<p>还有，对团队中某些成员来说，这也是一次机会。这意味着能够将原同事一些重要的工作内容分出来，锻炼一下更为年轻的同事，所以说对他们可能是一次机会。</p>
<hr>
<p>好了，暂时想和大家分享的就是这些了。<br>己亥猪年，有 4 次这样的经历，不谈好坏。但希望庚子鼠年越来越好，团队稳定，大家各司其职、各有所获。加油鸭！🦆🦆🦆 </p>
]]></content>
      <categories>
        <category>职业感想</category>
      </categories>
      <tags>
        <tag>职业生涯</tag>
        <tag>离职</tag>
      </tags>
  </entry>
  <entry>
    <title>关于好奇</title>
    <url>/2020/02/19/about-the-avatar/</url>
    <content><![CDATA[<p>人们常说，好奇心害死猫。真的是这样吗？</p>
<a id="more"></a>
<p>我看未必，这是显然是一个片面的定论，放大了问题的严重性。</p>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Design</tag>
        <tag>Avatar</tag>
      </tags>
  </entry>
  <entry>
    <title>所以，这个 Blog 是怎么来的呢</title>
    <url>/2020/02/17/hexo-learning-1/</url>
    <content><![CDATA[<p>是的，小汪同学的自建 Blog 来了。</p>
<p> 2020 年的春节假期，被一系列关键词渲染得异常特殊：</p>
<blockquote>
<p>「武汉肺炎」、「确诊人数」、「封城」、「一级响应」、「口罩预约」、「复工通知」</p>
</blockquote>
<p>对于返乡后一直宅着的我而言，意外延长的假期为这个 Blog 的诞生提供了基础——有时间来做些自己以前想做而未行动的事情了。</p>
<p>做为第一篇文章，记录一下这个 Blog 是如何搭建的。</p>
<a id="more"></a>
<hr>
<h2 id="写在开头"><a href="#写在开头" class="headerlink" title="写在开头"></a>写在开头</h2><ul>
<li>感谢 CodeSheep 的B站视频，提供了详细的搭建教程，让我学会了如何让这一切变成可能。<a href="https://www.bilibili.com/video/av44544186?from=search&seid=15635585637632752745" target="_blank" rel="noopener">《手把手教你从0开始搭建自己的个人博客 |无坑版视频教程| hexo》</a></li>
<li>本 Blog 的搭建框架为 <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>，是许多人的首推 Blog 框架。从官方是 Slogan 可见一斑：<blockquote>
<p>A fast, simple &amp; powerful blog framework</p>
</blockquote>
</li>
<li>本次搭建的环境为 macOS，下文中的演示&amp;截图将以此为基础。</li>
</ul>
<hr>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>搭建 Hexo 框架所需的工具并不多，主要有 Git，Node.js，Hexo。而辅助安装的有 Homebrew，nvm。</p>
<h3 id="安装-Homebrew"><a href="#安装-Homebrew" class="headerlink" title="安装 Homebrew"></a>安装 Homebrew</h3><blockquote>
<p>Homebrew 是 macOS 上的软件包管理工具，能在 macOS 中方便的安装软件或者卸载软件，相当于 Linux 下的 apt-get、yum 神器；Homebrew 可以在 Mac 上安装一些 OS X 没有的 UNIX 工具，Homebrew 将这些工具统统安装到了 /usr/local/Cellar 目录中，并在 /usr/local/bin 中创建符号链接</p>
</blockquote>
<p>Homebrew 官网：<a href="http://brew.sh/index_zh-cn.html" target="_blank" rel="noopener">http://brew.sh/index_zh-cn.html</a></p>
<p>如官网所展示的，Homebrew 的安装很简单，只需在终端下输入如下指令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ruby -e &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Homebrew&#x2F;install&#x2F;master&#x2F;install)&quot;</span><br></pre></td></tr></table></figure>

<p>执行成功后如下图所示：<br><img src="https://i.loli.net/2020/02/07/7wJCKo4qvgmVPfc.png" alt="Homebrew 安装成功"><br>验证一下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ brew -v</span><br></pre></td></tr></table></figure>
<p>预期将得到下列结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Homebrew 2.2.5</span><br><span class="line">Homebrew&#x2F;homebrew-core (git revision 970e; last commit 2020-02-04)</span><br></pre></td></tr></table></figure>

<p>我理解通过安装 Homebrew 能够较为方便的安装许多开发软件，例如安装 Git，仅需在终端中输入命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ brew install git   &#x2F;&#x2F; 安装Git</span><br></pre></td></tr></table></figure>

<h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><p><strong>方法 1</strong></p>
<p>CodeSheep 的教程中提供的是从<a href="https://nodejs.org/en/" target="_blank" rel="noopener">官方网站</a>上下载并无脑安装，较快速且简单.安装完成后会直接安装好 Node.js 和 npm。</p>
<p><strong>方法 2</strong><br>这里可以先参考一下<a href="https://zhuanlan.zhihu.com/p/38413720" target="_blank" rel="noopener">《node.js与npm与nvm的关系》</a>便于理解我们的操作步骤。总而言之就是：</p>
<blockquote>
<ol>
<li>nvm：Node.js 的版本管理工具。也就是说：一个 nvm 可以管理很多 Node.js 版本和 npm 版本。</li>
<li>Node.js：在项目开发时的所需要的代码库。</li>
<li>npm：Node.js 包管理工具。在安装的 Node.js 的时候，npm 也会跟着一起安装，它是包管理工具。npm 管理 Node.js 中的第三方插件.</li>
</ol>
</blockquote>
<p>所以步骤是：</p>
<ol>
<li>通过 Homebrew 安装 nvm：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ brew install nvm</span><br></pre></td></tr></table></figure></li>
<li>通过输入如下命令安装 Node.js：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nvm install version  &#x2F;&#x2F;此方法没有求证</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p>按照以上两种方法中的任意一种安装完 Node.js 后，可以验证一下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm -v</span><br><span class="line">6.13.4</span><br><span class="line">$ node -v</span><br><span class="line">v12.14.1</span><br></pre></td></tr></table></figure>
<p>这里还有一点，可以通过 cnpm（后续补充，暂且不表）来提升npm的速度。</p>
<h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>Git、Node.js都安装完成后，可以开始安装 Hexo 了。也很简单：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ sudo cnpm install hexo-cli</span><br></pre></td></tr></table></figure>
<p>安装成功后，惯例验证版本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo -v</span><br><span class="line">hexo-cli: 3.1.0</span><br><span class="line">os: Darwin 19.2.0 darwin x64</span><br><span class="line">node: 12.14.1</span><br><span class="line">v8: 7.7.299.13-node.16</span><br><span class="line">uv: 1.33.1</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.7</span><br><span class="line">ares: 1.15.0</span><br><span class="line">modules: 72</span><br><span class="line">nghttp2: 1.40.0</span><br><span class="line">napi: 5</span><br><span class="line">llhttp: 2.0.1</span><br><span class="line">http_parser: 2.8.0</span><br><span class="line">openssl: 1.1.1d</span><br><span class="line">cldr: 35.1</span><br><span class="line">icu: 64.2</span><br><span class="line">tz: 2019c</span><br><span class="line">unicode: 12.1</span><br></pre></td></tr></table></figure>
<p>接下来，就是建立 Blog 的项目了，可以找一个你喜欢的路径（我的是在主页下直接建了名为 blog 的文件夹），执行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure>
<p>预期会得到结尾为如下的提示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INFO Start blogging with Hexo</span><br></pre></td></tr></table></figure>
<p>然后可以在建立项目的文件夹内看到如下文件，说明 Hexo 的安装就已经成功搞定了。<br><img src="https://i.loli.net/2020/02/07/whq5ub2IHRnT3sz.png" alt="Hexo 文件夹"><br>最后，将 Git 的部署搞定：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>
<h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><p>工具、环境已经齐备，那我们就可以在做第一篇文章的编写以及发布了，赶紧去试试吧。<br>这里就不详述了，几个常用的命令，可以参考 Hexo 官方文档：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo n *** &#x2F;&#x2F;新建一篇文章，***代表文章名，建议使用英文，因为会作为 url 路径</span><br><span class="line">hexo g &#x2F;&#x2F;提交更新</span><br><span class="line">hexo s &#x2F;&#x2F;启动本地服务</span><br><span class="line">hexo d &#x2F;&#x2F;部署至远端 Git 仓库</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>learning</tag>
      </tags>
  </entry>
</search>
